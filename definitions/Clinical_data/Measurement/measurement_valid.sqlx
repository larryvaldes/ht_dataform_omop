config {
    type: "view"
}
with base as(
select * from `healthtree-production.HT.Observation` where fhir is not null and user.name in
(Select person_source_value from ${ref("allPersons")}) and (fhir.valueQuantity is not null or fhir.valueRange is not null)
)

select

user.name as person_source_value,
fhir.id as record_source_id,
COALESCE(fhir.effectiveDateTime.string, CAST(fhir.effectiveDateTime.date_time as STRING), CAST(fhir.issued as STRING), fhir.effectivePeriod.start) as measurement_DATE,
COALESCE(CAST(fhir.valueQuantity.value.float as STRING), CAST(fhir.valueQuantity.value.integer as STRING), fhir.valueQuantity.value.string) as value_as_number,
COALESCE(CAST(fhir.valueQuantity.value.float as STRING), CAST(fhir.valueQuantity.value.integer as STRING), fhir.valueQuantity.value.string) as value_source_value,
COALESCE(fhir.valueQuantity.unit.string, CAST(fhir.valueQuantity.unit.integer as STRING)) as unit_source_value,
COALESCE(fhir.referenceRange[SAFE_OFFSET(0)].low.value.float, fhir.referenceRange[SAFE_OFFSET(0)].low.value.integer,
fhir.valueRange.low.value.float, fhir.valueRange.low.value.integer) as range_low,
COALESCE(fhir.referenceRange[SAFE_OFFSET(0)].high.value.float, fhir.referenceRange[SAFE_OFFSET(0)].high.value.integer,
fhir.valueRange.high.value, fhir.valueRange.high.value) as range_high,
fhir.encounter.reference as visit_occurrence_reference,
fhir.encounter.display as visit_occurrence_type,
COALESCE(fhir.code.coding[SAFE_OFFSET(0)].display, fhir.code.text) as measurement_source_value,
COALESCE(fhir.code.coding[SAFE_OFFSET(0)].code) as measurement_source_code,
COALESCE(fhir.code.coding[SAFE_OFFSET(0)].system) as measurement_source_system,
COALESCE(fhir.category[SAFE_OFFSET(0)].text, fhir.category[SAFE_OFFSET(0)].coding[SAFE_OFFSET(0)].display) as measurement_source_type,
fhir.status as measurement_source_status

from base